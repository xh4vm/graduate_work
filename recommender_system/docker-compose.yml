version: '3.8'

x-base-service: &base_service
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
  networks:
    - recommended

x-redis: &base_redis
  image: redis:7.0-alpine
  container_name: redis
  restart: unless-stopped
  expose:
    - ${REDIS_PORT}
  healthcheck:
    test: [ "CMD", "redis-cli","ping" ]
    interval: 30s
    timeout: 10s
    retries: 5

x-spark-worker: &base_spark_worker
  build: ./recommender_system/spark
  restart: on-failure
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    - ./spark/.data:/opt/bitnami/spark/work/
  depends_on:
    spark-master:
      condition: service_healthy
  environment:
    - SPARK_MODE=worker
    - SPARK_MASTER_URL=spark://spark-master:${SPARK_MASTER_PORT}
    - SPARK_WORKER_MEMORY=2G
    - SPARK_WORKER_CORES=1
    - SPARK_RPC_AUTHENTICATION_ENABLED=no
    - SPARK_RPC_ENCRYPTION_ENABLED=no
    - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    - SPARK_SSL_ENABLED=no

x-grpc: &base_grpc
  build: ./grpc
  container_name: recommender_grpc
  volumes:
    - ./grpc:/opt/grpc
  env_file: .env

services:
  nginx:
    <<: *base_service
    image: nginx:1.23.1-alpine
    container_name: nginx
    profiles:
      - dev_recom
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/:/etc/nginx/conf.d/:ro
      - ./nginx/static/errors:/var/www/errors/:ro
      - ./nginx/static/log/access_log:/var/log/nginx/access.log:rw
      - ./nginx/static/log/error_log:/var/log/nginx/error.log:rw
    ports:
      - ${SPARK_MASTER_WEB_PORT}:${SPARK_MASTER_WEB_PORT}

  spark-master:
    <<: *base_service
    build: ./recommender_system/spark
    container_name: spark-master
    hostname: spark-master
    restart: on-failure
    volumes:
      - ./spark/clickhouse-native-jdbc-shaded-2.6.4.jar:/opt/clickhouse-native-jdbc-shaded-2.6.4.jar
    profiles:
      - dev_recom
      - prod
    expose:
      - ${SPARK_MASTER_WEB_PORT}
      - ${SPARK_MASTER_PORT}
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    healthcheck:
      test: curl http://spark-master:${SPARK_MASTER_WEB_PORT} >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  spark-worker01:
    <<: *base_service
    <<: *base_spark_worker
    container_name: spark-worker01
    hostname: spark-worker01
    profiles:
      - dev_recom
      - prod

  spark-worker02:
    <<: *base_service
    <<: *base_spark_worker
    container_name: spark-worker02
    hostname: spark-worker02
    profiles:
      - dev_recom
      - prod

  spark-worker03:
    <<: *base_service
    <<: *base_spark_worker
    container_name: spark-worker03
    hostname: spark-worker03
    profiles:
      - dev_recom
      - prod

  jupyter-notebook:
    <<: *base_service
    image: jupyter/pyspark-notebook:python-3.8
    container_name: jupyter-notebook
    hostname: jupyter-notebook
    depends_on:
      spark-master:
        condition: service_healthy
    volumes:
      - ./jupyter-notebook/clickhouse-native-jdbc-shaded-2.6.4.jar:/opt/clickhouse-native-jdbc-shaded-2.6.4.jar
      - ./jupyter-notebook/work:/home/developer/work
    profiles:
      - dev_recom
    ports:
      - ${NOTEBOOK_PORT}:${NOTEBOOK_PORT}

  redis:
    <<: *base_service
    <<: *base_redis
    profiles:
      - dev_recom
      - prod
    volumes:
      - redis-data:/data

  recommender_grpc_dev:
    <<: *base_service
    <<: *base_grpc
    profiles: 
      - dev_recom
    ports:
      - ${RECOMMENDER_GRPC_PORT}:${RECOMMENDER_GRPC_PORT}

  recommender_grpc:
    <<: *base_service
    <<: *base_grpc
    profiles: 
      - prod
    expose:
      - ${RECOMMENDER_GRPC_PORT}

  
  mongors1n1:
    <<: *base_service
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data1:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongors1n2:
    <<: *base_service
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data2:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongors1n3:
    <<: *base_service
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data3:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongors2n1:
    <<: *base_service
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data4:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongors2n2:
    <<: *base_service
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data5:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongors2n3:
    <<: *base_service
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-data6:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongocfg1:
    <<: *base_service
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-config1:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongocfg2:
    <<: *base_service
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-config2:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongocfg3:
    <<: *base_service
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_cluster1-config3:/data/db
    profiles: 
      - dev_recom
      - mongo

  mongos1:
    <<: *base_service
    container_name: mongos1
    image: mongo
    hostname: mongos1
    depends_on:
      - mongocfg1
      - mongocfg2
      - mongocfg3
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    profiles: 
      - dev_recom
      - mongo

  mongos2:
    <<: *base_service
    container_name: mongos2
    image: mongo
    hostname: mongos2
    depends_on:
      - mongocfg1
      - mongocfg2
      - mongocfg3
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    profiles: 
      - dev_recom
      - mongo


networks:
  recommended:
    driver: bridge

volumes:
  mongo_cluster1-config1:
  mongo_cluster1-config2:
  mongo_cluster1-config3:
  mongo_cluster1-data1:
  mongo_cluster1-data2:
  mongo_cluster1-data3:
  mongo_cluster1-data4:
  mongo_cluster1-data5:
  mongo_cluster1-data6:
  redis-data:
