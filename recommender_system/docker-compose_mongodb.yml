version: '3.8'

x-base-service: &base_service
  networks:
    - recommended

x-base-mongodb-cluster-unit: &base-mongodb_cluster-unit
  <<: *base_service
  image: mongo
  expose:
    - "27017"
  profiles:
    - mongo

x-base-mongodb-cluster-unit-healthcheck: &base-mongodb_cluster-unit-healthcheck
  healthcheck:
    test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
    interval: 10s
    timeout: 10s
    retries: 5

x-base-mongocfg_dependencies: &mongocfg_dependencies
  depends_on:
    mongors1n1:
      condition: service_healthy
    mongors1n2:
      condition: service_healthy
    mongors1n3:
      condition: service_healthy
    mongors2n1:
      condition: service_healthy
    mongors2n2:
      condition: service_healthy
    mongors2n3:
      condition: service_healthy

x-base-mongos_dependencies: &mongos_dependencies
  depends_on:
    mongocfg1:
      condition: service_healthy
    mongocfg2:
      condition: service_healthy
    mongocfg3:
      condition: service_healthy


services:

  mongors1n1:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors1n1
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data1:/data/db

  mongors1n2:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors1n2
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data2:/data/db

  mongors1n3:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors1n3
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data3:/data/db

  mongors2n1:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors2n1
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data4:/data/db

  mongors2n2:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors2n2
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data5:/data/db

  mongors2n3:
    <<: *base-mongodb_cluster-unit
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongors2n3
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data6:/data/db

  mongocfg1:
    <<: *base-mongodb_cluster-unit
    <<: *mongocfg_dependencies
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongocfg1
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/config1:/data/db

  mongocfg2:
    <<: *base-mongodb_cluster-unit
    <<: *mongocfg_dependencies
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongocfg2
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/config2:/data/db

  mongocfg3:
    <<: *base-mongodb_cluster-unit
    <<: *mongocfg_dependencies
    <<: *base-mongodb_cluster-unit-healthcheck
    container_name: mongocfg3
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/config3:/data/db

  mongos1:
    <<: *base-mongodb_cluster-unit
    <<: *mongos_dependencies
    container_name: mongos1
    hostname: mongos1
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro

  mongos2:
    <<: *base-mongodb_cluster-unit
    <<: *mongos_dependencies
    container_name: mongos2
    hostname: mongos2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - "27018:27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro

  mongo_cluster_initer:
    <<: *base_service
    image: mongo
    container_name: mongo_cluster_initer
    command: ["/bin/bash", "-c", "chmod +x /opt/init_mongodb_cluster.sh && /opt/init_mongodb_cluster.sh"]
    volumes:
      - ./init_mongodb_cluster.sh:/opt/init_mongodb_cluster.sh
    profiles:
      - mongo
    depends_on:
      - mongos1
      - mongos2
    healthcheck:
      test: bash -c "[ -f "/opt/ready.flag" ]"
      interval: 20s
      timeout: 120s
      retries: 10

  mongodb_initer:
    <<: *base_service
    build:
      context: ./
      dockerfile: mongodb_initer/Dockerfile
    container_name: mongodb_initer
    profiles:
      - mongo
    depends_on:
      mongo_cluster_initer:
        condition: service_healthy
    volumes:
      - ./mongodb_initer/src:/opt/content/src

networks:
  recommended:
    name: graduate_work_graduate
#    name: recommender_system_recommended
    external: true

